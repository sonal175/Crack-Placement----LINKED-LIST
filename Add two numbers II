// Add two numbers II

// TC- O(n+m) SC-O(1) where n and m is the size of list1 and list2

  
  // Code--- 
  
   
     ListNode* reverse(ListNode*head){
        ListNode*curr=head;
        ListNode*prev=NULL;
        while(curr){
            ListNode*nex=curr->next;
            curr->next=prev;
            prev=curr;
            curr=nex;
        }
        return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1=reverse(l1);
        l2=reverse(l2);
         ListNode*p=l1;
        int carry=0;
        ListNode* prev=NULL;
        while(l1 && l2){
            int sum=l1->val+l2->val+carry;
            l1->val=sum%10;
            carry=sum/10;
            prev=l1;
            l1=l1->next;
            l2=l2->next;
        }
        if(l2!=NULL){
            prev->next=l2;
            l1=l2;
        }
        if(l1!=NULL){
            while(l1){
                int sum=l1->val+carry;
                l1->val=sum%10;
                carry=sum/10;
                prev=l1;
                l1=l1->next;
                
            }
        }
        if(carry){
            ListNode*n=new ListNode(carry);
            prev->next=n;
            
        }
        p=reverse(p);
        return p;
    }
