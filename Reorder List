// Reorder list (alternate first and last ,here head was not changed so function return type is void)

 // TC-O(n)  SC-O(1)
 
 // Code---
 
    ListNode* reverse(ListNode* head){
        ListNode*prev=NULL;
        ListNode*curr=head;
        ListNode*forward=NULL;
        while(curr){
            forward=curr->next;
            curr->next=prev;
            prev=curr;
            curr=forward;
        }
        return prev;
    }
    void reorderList(ListNode* head) {
        if(head==NULL || head->next==NULL) return ;
        ListNode*slow=head;
        ListNode*fast=head;
        ListNode*prev=NULL;
        while(slow && fast && fast->next){
            prev=slow;
            slow=slow->next;
            fast=fast->next->next;
        }
        prev->next=NULL;
        ListNode*l1=head;
        ListNode* l2=slow;
        l2=reverse(l2);
    
         while(l2!=NULL){
             ListNode*nex=l1->next;
             l1->next=l2;
             l1=l2;
             l2=nex;
         }
        
        return ;
    }
    
    // Reorder list (alternate last and first here head has changed so function return type is ListNode*)
    
    
    // TC-O(n)  SC-O(1)
    
    // Code---
    
    
      ListNode* reverse(ListNode* head){
        ListNode*prev=NULL;
        ListNode*curr=head;
        ListNode*forward=NULL;
        while(curr){
            forward=curr->next;
            curr->next=prev;
            prev=curr;
            curr=forward;
        }
        return prev;
    }
    ListNode* reorderList(ListNode* head) {
        if(head==NULL || head->next==NULL) return  head;
        ListNode*slow=head;
        ListNode*fast=head;
        ListNode*prev=NULL;
        while(slow && fast && fast->next){
            prev=slow;
            slow=slow->next;
            fast=fast->next->next;
        }
        prev->next=NULL;
        ListNode*l1=head;
        ListNode* l2=slow;
        l2=reverse(l2);
       ListNode*temp=l2;
         while(l1!=NULL){
             ListNode*nex=l2->next;
             l2->next=l1;
             l2=l1;
             l1=nex;
         }
        head=temp;
        return head ;
    }
