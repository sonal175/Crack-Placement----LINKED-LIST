// Next Greater Node In Linked List

// TC-O(n)  SC-O(n)  where n is the size of linked list

// Code--

   ListNode* rev(ListNode* head){
        ListNode*curr=head;
        ListNode* prev=NULL;
        ListNode* nex=head;
        while(curr){
            nex=curr->next;
            curr->next=prev;
            prev=curr;
            curr=nex;
        }
        return prev;
    }
    vector<int> nextLargerNodes(ListNode* head) {
        vector<int>v;
        stack<int>s;
         head=rev(head);
        ListNode*temp=head;
        while(temp!=NULL){
            if(s.empty()==true){
                v.push_back(0);
                
            }else if(s.top()>temp->val){
                v.push_back(s.top());
            }else{
                while(!s.empty() && s.top()<=temp->val){
                    s.pop();
                }
                if(s.empty()==true){
                    v.push_back(0);
                }else{
                    v.push_back(s.top());
                }
            }
        
            s.push(temp->val);
            temp=temp->next;
        }
        reverse(v.begin(),v.end());
            
        return v;
    }
