// Segregate even and odd nodes in a Link List 

// TC-O(n)  SC-O(1)  where n is the size of list

// Code--

   Node* divide(int N, Node *head){

        Node*odd=new Node(0);
        Node*even=new Node(0);
        Node*curr1=even;
        Node*curr2=odd;
        Node*temp=head;
        while(temp!=NULL){
            if(temp->data%2==0){
                curr1->next=temp;
                curr1=curr1->next;
            }else{
                curr2->next=temp;
                curr2=curr2->next;
            }
            temp=temp->next;
        }
        curr1->next=odd->next;
        curr2->next=NULL;
        return even->next;
        
    }
