//  Multiply two numbers represented by Linked Lists

 (In this question we have to return the integral product of two numbers represented as linked lists)
 
  // TC-O(n)  SC-O(1) where n is the size of linked list
  
   // Code--
     
       long long  multiplyTwoLists (Node* l1, Node* l2)
{
 
  long long N=1000000007;
  Node*first=l1;
  Node*second=l2;
  long long num1=0;
  long long num2=0;
  while(first || second){
      if(first){
          num1=(num1*10)%N+first->data;
          first=first->next;
      }
      if(second){
          num2=(num2*10)%N+second->data;
          second=second->next;
      }
  }
  return ((num1%N)*(num2%N))%N;
}

// In this we have to return linked list containing product of two numbers represented as linked lists

  // Code--
  
      // TC-O(n^2)  SC-O(1)  where n is the size of linked list
      
      // Code---
      
         Node* reverse(Node* head){
      Node* curr=head;
      Node* prev=NULL;
      Node* nex=head;
      while(curr){
          nex=curr->next;
          curr->next=prev;
          prev=curr;
          curr=nex;
      }
      return prev;
  }

  Node* multiplydigit(Node* head, int dig){
      Node* dummy=new Node(-1);
      Node* ac=dummy;
      Node* curr=head;
       int carry=0;
        while(curr!=NULL || carry!=0){
            int sum=carry+(curr!=NULL)? curr->data*dig:0;
            int digit=sum%10;
            carry=sum/10;
            ac->next=new Node(digit);
            if(curr!=NULL) curr=curr->next;
            ac=ac->next;
        }
        return dummy->next;
  }
  
  void addtwolists(Node* head, Node*ansitr){
      Node* c1=head;
      Node* c2=ansitr;
      int  carry=0;
       while(c1!=NULL || carry!=0){
           int sum=carry+(c1!=NULL ? c1->data:0)+(c2->next!=NULL ? c2->next->data:0);
           int digit=sum%10;
           carry=sum/10;
           if(c2->next!=NULL ) c2->next->data=digit;
           else c2->next=new Node(digit);
            
            if(c1!=NULL) c1=c1->next;
            c2=c2->next;
       }
  }
     
     Node* multiply( Node* l1, Node* l2){
         l1=reverse(l1);
         l2=reverse(L2);
         Node* l2_itr=l2;
         Node* dummy=new Node(-1);
         Node* ansitr=dummy;
         while(l2_itr!=NULL){
             Node* prod=multiplydigit(l1,l2_itr->data);
             l2_itr=l2_itr->next;
             addtwolists(prod,ansitr);
             ansitr=ansitr->next;
         }
         return reverse(dummy->next);
     }
  
